#pragma once

const uint16_t larson_scanner_asm[] = {
  0x0000, 0x31, // LXI SP,4095
  0x0001, 0xff, //
  0x0002, 0x0f, //
  0x0003, 0xC3, // JMP START
  0x0004, 0x44, //
  0x0005, 0x00, //
  0x0044, 0x21, // START: LXI H,9800H
  0x0045, 0x00, //
  0x0046, 0x98, //
  0x0047, 0x36, //  MVI M,00000001B
  0x0048, 0x01, //
  0x0049, 0x3E, //  MVI A,1
  0x004a, 0x01, //
  0x004b, 0x21, //  LXI H,9801H
  0x004c, 0x01, //
  0x004d, 0x98, //
  0x004e, 0x01, //  LXI B,2000H
  0x004f, 0x00, //
  0x0050, 0x20, //
  0x0051, 0x77, // FWD: MOV M,A
  0x0052, 0x07, //  RLC
  0x0053, 0xCD, //  CALL DELAY
  0x0054, 0x68, //
  0x0055, 0x00, //
  0x0056, 0xFE, //  CPI 80H
  0x0057, 0x80, //
  0x0058, 0xC2, //  JNZ FWD
  0x0059, 0x51, //
  0x005a, 0x00, //
  0x005b, 0x77, // REV: MOV M,A
  0x005c, 0x0F, //  RRC
  0x005d, 0xCD, //  CALL DELAY
  0x005e, 0x68, //
  0x005f, 0x00, //
  0x0060, 0xFE, //  CPI 1H
  0x0061, 0x01, //
  0x0062, 0xC2, //  JNZ REV
  0x0063, 0x5b, //
  0x0064, 0x00, //
  0x0065, 0xC3, //  JMP FWD
  0x0066, 0x51, //
  0x0067, 0x00, //
  0x0068, 0xF5, // DELAY: PUSH PSW
  0x0069, 0xC5, //  PUSH B
  0x006a, 0x0B, // DLOOP: DCX B
  0x006b, 0x3E, //  MVI A,0
  0x006c, 0x00, //
  0x006d, 0xB1, //  ORA C
  0x006e, 0xC2, //  JNZ DLOOP
  0x006f, 0x6a, //
  0x0070, 0x00, //
  0x0071, 0xB0, //  ORA B
  0x0072, 0xC2, //  JNZ DLOOP
  0x0073, 0x6a, //
  0x0074, 0x00, //
  0x0075, 0xC1, //  POP B
  0x0076, 0xF1, //  POP PSW
  0x0077, 0xC9, //  RET
};
